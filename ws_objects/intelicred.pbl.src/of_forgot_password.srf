$PBExportHeader$of_forgot_password.srf
global type of_forgot_password from function_object
end type

forward prototypes
global function integer of_forgot_password (string as_user, boolean ab_quest, boolean ab_email)
end prototypes

global function integer of_forgot_password (string as_user, boolean ab_quest, boolean ab_email); //Start Code Change ----11.30.2015 #V15 maha - added
 //this is fairly problematic as the typical management of this sends an email to the user with a temporary password. 
 //However as the email send function would create the email to be sent on the user's computer, it would be a security breach in of itself.
 
string ls_email
string ls_email_mes
string ls_pass
string ls_user
string ls_message
string s
string ls_pass_string
string ls_auth
String ls_errtext
datetime ldt_date
integer r
integer li_count
Int li_rtn
Constant Int li_interval = 20 //interval time for send email
long ll_rec_id
Long ll_flag = 0
n_cst_encrypt luo_encrypt
gs_pass_ids lst_pass
n_cst_ws_sendmail lnv_ws_sendmail

ls_user = upper(as_user)

if not ab_email and not ab_quest then
	messagebox("Forgot password","Security settings are not securely configured to use this function.  Contact the System Administrator to reset your password.")
	return -1
end if

//check for existence of user
select count(user_id) into :r from security_users where upper(user_id) = :ls_user and active_status = 1;

if r = 0 then
	messagebox("Forgot password","User name is invalid or user is inactive.  Contact the System Administrator.")
	return -1
end if

if ab_email then
//	r = messagebox("Forgot password", "Are you sure you wish to be sent a temporary password for logging in?",question!,yesno!,2)
//	if r = 2 then return -1
	
	//check email email address for user
	//----------Begin Modified by alfee 11.02.2016 -------------
	if gi_email_type = 0 then //easymail
		select top 1 email into :ls_email from em_smtp_accounts where user_id = :ls_user AND is_default = 'Y'; 
	else							//outlook
		select email_id into :ls_email from security_users where upper(user_id) = :ls_user;
	end if 	
	//select email_id into :ls_email from security_users where upper(user_id) = :ls_user;
	//----------End Modified ----------------------------------------
	
	if isnull(ls_email) or len(ls_email) < 1 then
		messagebox("Forgot password","There is no email address for this user.  Contact the System Administrator.")
		return -1
	end if	
	
	//Check last send mail time. Added by Appeon long.zhang 06.20.2016 (v15.2 Forgotten Password Web Service)
	ldt_date = Datetime(today(), RelativeTime( Now(), -li_interval ))
	ll_flag = 0
	select count(1)
	into :ll_flag 
	from sys_audit_user 
	where user_id = :ls_user and field_name = 'Forgot Password'  and audit_type = 'PWC' and date_time_modified > :ldt_date;
	If sqlca.sqlcode = 0 and ll_flag > 0 Then
		messagebox('Forgot password','Please wait at least '+ String(li_interval) +' secs after last time.')
		return -1
	End If

end if

if ab_quest then
	//check for existance of security questions
	select count(quest_id) into :li_count from security_user_quest where upper(user_id) = :ls_user;
	
	if isnull(li_count) or li_count < 1 then
		messagebox("Forgot password","There are no security questions for this user id, so you will not be able to reset a password this way .  Contact the System Administrator to reset your password.")
		return -1
	end if	
	
	openwithparm(w_security_quest_forgot_answer, ls_user)

	if message.doubleparm = -2 then
		messagebox("Failed","Security questions failed.  User Id is now locked out.  Please contact the system Administrator to reset your password.")
		return -2
	elseif message.doubleparm = 0 then
		return 0 //BugA071102  - alfee 07.26.2016
	end if	
end if

//create temporary password
ls_pass = of_create_random_password(10)

If ab_quest Then //add ab_quest, Don't update password before succeed in sending email. Added by Appeon long.zhang 06.20.2016 ( v15.2 Forgotten Password Web Service)
	update security_users set user_password = :ls_pass where upper(user_id) = :ls_user;
End If

//audit data
select max(rec_id) into :ll_rec_id from sys_audit_user;
if isnull(ll_rec_id) then ll_rec_id = 0
ll_rec_id++
ldt_date = datetime(today(),now()) 
insert into sys_audit_user (rec_id, user_id, field_name, old_value, new_value, mod_by, date_time_modified, audit_type   ) values (:ll_rec_id, :ls_user, 'Forgot Password', '*****','*****', :ls_user, :ldt_date, 'PWC' );
commit using sqlca;

//send email to user with temporary password
if ab_email then
	//messagebox("Forgot password","A temporary password has been sent to your email address.  When you have logged in with this password, you will be required to change it.")
	ls_message = "You have requested a temporary password to log into the IntelliSoft system.  The temporary password is  PASSWORD.  Please log in with this password.  You will be required to change it when you log in. " 
	//messagebox("","The email functionality for forgotten password is under development.")
	ls_email_mes = "*****" + mid(ls_email, pos(ls_email,"@", 1))
	//messagebox("Forgotten password", "An email with a temporary password will be sent to your email address. ( " + ls_email_mes + " )" )  
	messagebox("Forgot password", "An email with a temporary password will be sent to your email address. ( " + ls_email_mes + " )" +"~r~nPlease wait few seconds.")
		
	SetPointer(HourGlass!)//Added by Appeon long.zhang 06.21.2016
	
//	ls_auth = luo_encrypt.of_encrypt2( ls_pass, ls_email)
//	ls_email =  luo_encrypt.of_encrypt( ls_email)
//	ls_pass =  luo_encrypt.of_encrypt( ls_pass)
//	ls_pass_string = ls_email + "~r"
//	
//	lst_pass.s_fax_subject = "Forgotten Password Request"
//	lst_pass.s_fax_message = ls_message
//	lst_pass.s_fax_recipient = ls_email
//	lst_pass.s_fax_company = ls_auth
//	lst_pass.s_fax_fax_number = ls_pass
	 
	 //Send mail using Webservice, encrypt in following function
	lnv_ws_sendmail = Create n_cst_ws_sendmail
	li_rtn = lnv_ws_sendmail.of_sendemail( "Forgot Password Request", False, ls_message, ls_pass, ls_email)
	
	If li_rtn < 0 Then
		ls_errtext = lnv_ws_sendmail.of_get_err_text()
		messagebox("Forgot password", 'Send Email Failed:~r~n' + ls_errtext)
	Else
		update security_users set user_password = :ls_pass where upper(user_id) = :ls_user;
		//messagebox("Forgotten password", 'Successful. ~r~nPlease Check your email.')
	End If
	
	SetPointer(Arrow!)
	
	Destroy lnv_ws_sendmail
//	ls_pass_string+= "Forgotten Password Request~r"
//	ls_pass_string+= ls_message + "~r"
//	ls_pass_string+= ls_auth
	//messagebox("Forgotten password", "The email functionality for forgotten password is under development.")/// ls_pass_string)
//	clipboard(ls_pass)
//	openwithparm(w_forgot_password_test, lst_pass)
//This will have to be done via a web service on the ISG Site. 
//Will have to pass user id and password (or message containing both) as well as the email address
	
elseif ab_quest then
	ls_message = "You have requested a temporary password to log into the IntelliSoft system.  The temporary password is " + ls_pass + ".  Please log in with this password.  You will be required to change it when you log in.  Password is on your clipboard." 
	messagebox("Forgot Password",ls_message)
	clipboard(ls_pass)
end if

return 1
end function

