$PBExportHeader$of_create_password.srf
global type of_create_password from function_object
end type

forward prototypes
global function string of_create_password (string as_type, long al_prac, string as_user)
end prototypes

global function string of_create_password (string as_type, long al_prac, string as_user);//Start Code Change ----11.22.2011 #V12 maha - added for additional default passwords
//Start Code Change ----01.25.2012 #V12 maha - modified to create user ids; changed to case statement
string pw
string ls_ssn
string ls_name
string ls_npi
string ls_id
string ls_last
string ls_first


if isnull(al_prac)  or al_prac = 0 then
	choose case as_type
		case "123", "RAND", "NAME"
			//ok for any user
		case else
			messagebox("Password set","The Password type (" + as_type + ") can only be used with Practitioner users that have a prac_id.")
			return "-1"
	end choose	
else
	select ssn, full_name, last_name, first_name, provider_id, npi_number into :ls_ssn, :ls_name,:ls_last, :ls_first, :ls_id, :ls_npi from v_full_name where prac_id = :al_prac;
	if isnull(ls_name) or ls_name = "" then
		messagebox("Password set","Cannot find a practitioner with this id: " + string(al_prac))
		return "-1"
	end if
end if

choose case as_type
	case "123"
		pw = "123"
	case  "SSN", "SSN6"
		if isnull(ls_ssn) or len(ls_ssn) < 4 then
			messagebox("Password set","Practitioner " + ls_name + " does not have an SSN value to set as a password.")
		return "-1"
		else
			ls_ssn = of_strip_char ("",ls_ssn,"@NUM@" )
			if as_type = "SSN"  then
				pw = RightA( ls_ssn , 4)
			elseif as_type = "SSN6"  then
				pw = LeftA( ls_ssn , 6)
			end if 
		end if
	case  "RAND" 
		pw = of_create_random_password(6)  //Start Code Change ----03.06.2013 #V12 maha - modified to pass argument
		messagebox("Password", pw)
		
	case "NAME" 
		pw = 	as_user
	case "LASTI"
		ls_last = of_strip_char("", ls_last, "@USERNAME@")  //Start Code Change ----02.14.2012 #V12 maha
		pw = lower(LeftA( ls_last , 9) + LeftA( ls_first , 1))
	case "ILAST"
		ls_last = of_strip_char("", ls_last, "@USERNAME@")  //Start Code Change ----02.14.2012 #V12 maha
		pw = lower(LeftA( ls_first , 1) + LeftA( ls_last , 9 ))
	case "PROVID"
		if isnull(ls_id) then  //Start Code Change ----06.09.2016 #V152 maha
			messagebox("Password set","Practitioner " + ls_name + " does not have a provider_id value to set as a password.")
			return "-1"
		end if
		pw = ls_id
	case "NPI"
		if isnull(ls_id) then   //Start Code Change ----06.09.2016 #V152 maha
			messagebox("Password set","Practitioner " + ls_name + " does not have an NPI value to set as a password.")
			return "-1"
		end if
		pw = ls_npi
end choose

if isnull(pw ) then pw = "-1"


return pw
end function

