$PBExportHeader$gf_combinfilestobinary.srf
global type gf_combinfilestobinary from function_object
end type

forward prototypes
global function string gf_combinfilestobinary (string as_filespathlist, ref blob ablb_filescontent)
end prototypes

global function string gf_combinfilestobinary (string as_filespathlist, ref blob ablb_filescontent);//====================================================================
// Function: gf_CombinFilesToBinary()
//--------------------------------------------------------------------
// Description:
//--------------------------------------------------------------------
// Arguments:
// 	value    	string	as_filespathlist 	
// 	reference	blob  	ablb_filescontent	
//--------------------------------------------------------------------
// Returns:  string
//--------------------------------------------------------------------
// Author:	Scofield		Date: 2009-02-17
//--------------------------------------------------------------------
//	Copyright (c) 1999-2009 Appeon, All rights reserved.
//--------------------------------------------------------------------
// Modify History:
//
//====================================================================

String	ls_FileName[],ls_PathName,ls_FileSize,ls_Result
long		ll_Pos,ll_FileCycle,ll_FileCnts,ll_FileNo,ll_ReadCnts

Blob		lblb_Temp

CONSTANT STRING SEMICOLON = ";"
CONSTANT STRING SEPARATEBAR = "|"

as_FilesPathList = Trim(as_FilesPathList)
if Right(as_FilesPathList,1) <> SEMICOLON then
	as_FilesPathList += SEMICOLON
end if

ll_Pos = Pos(as_FilesPathList,SEMICOLON)
do while ll_Pos > 0
	ls_PathName = Trim(Left(as_FilesPathList,ll_Pos - 1))
	if ls_PathName <> "" and FileExists(ls_PathName) then
		ls_FileName[UpperBound(ls_FileName) + 1] = ls_PathName
	end if
	as_FilesPathList = Trim(Mid(as_FilesPathList,ll_Pos + 1))
	ll_Pos = Pos(as_FilesPathList,SEMICOLON)
loop

ll_FileCnts = UpperBound(ls_FileName)
for ll_FileCycle = 1 to ll_FileCnts
	ls_FileSize += String(FileLength(ls_FileName[ll_FileCycle])) + SEMICOLON
	
	ll_FileNo = FileOpen(ls_FileName[ll_FileCycle],StreamMode!,Read!)
	if ll_FileNo < 0 then
		ls_Result = "Failed to open file " + ls_FileName[ll_FileCycle] + "."
		Return ls_Result
	end if
	
	ll_ReadCnts = FileRead(ll_FileNo,lblb_Temp)
	do while ll_ReadCnts >= 0
		ablb_FilesContent += lblb_Temp
		ll_ReadCnts = FileRead(ll_FileNo,lblb_Temp)
	loop

	FileClose(ll_FileNo)
next

if ll_FileCnts > 1 then
	ls_FileSize = SEPARATEBAR + Left(ls_FileSize,Len(ls_FileSize) - 1) + SEPARATEBAR
	ablb_FilesContent = Blob(ls_FileSize) + ablb_FilesContent //restord by alfee 11.15.2013
	//ablb_FilesContent = Blob(ls_FileSize, EncodingAnsi!) + ablb_FilesContent
end if

Return ls_Result

end function

