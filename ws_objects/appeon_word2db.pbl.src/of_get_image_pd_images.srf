$PBExportHeader$of_get_image_pd_images.srf
global type of_get_image_pd_images from function_object
end type

forward prototypes
global function integer of_get_image_pd_images (long al_rec_id, long al_prac_id, long ai_facility_id, long ai_seq_no, long ai_screen_id, ref blob lb_image_data)
end prototypes

global function integer of_get_image_pd_images (long al_rec_id, long al_prac_id, long ai_facility_id, long ai_seq_no, long ai_screen_id, ref blob lb_image_data);Long ll_data_length
Integer li_counter
Integer li_loops
Blob lb_data
Blob lb_all_data
Long ll_start

// Get file data from database
//--------------------------- APPEON BEGIN ---------------------------
//$<Modify> 08.24.2007 By: Evan
//$<Reason> The facility_id argument is not requirement.
/*
SELECT Datalength(image_data)
INTO :ll_data_length
FROM pd_images
WHERE rec_id = :al_rec_id AND
      prac_id = :al_prac_id AND
		facility_id = :ai_facility_id AND
		seq_no = :ai_seq_no AND
		screen_id = :ai_screen_id
USING SQLCA;
*/
SELECT Datalength(image_data)
INTO :ll_data_length
FROM pd_images
WHERE rec_id = :al_rec_id AND
      prac_id = :al_prac_id AND
		seq_no = :ai_seq_no AND
		screen_id = :ai_screen_id
USING SQLCA;
//---------------------------- APPEON END ----------------------------

IF ll_data_length = 0 OR Isnull(ll_data_length) THEN
	RETURN 0
END IF

IF ll_data_length > 8000 THEN 
  	 IF Mod(ll_data_length,8000) = 0 THEN 
        li_loops = ll_data_length/8000 
    ELSE 
  	     li_loops = (ll_data_length/8000) + 1 
    END IF 
ELSE 
  	 li_loops = 1 
END IF 

FOR li_counter = 1 to li_loops
	Yield()
	SetPointer(HourGlass!)
	
	ll_start = (li_counter - 1) * 8000 + 1
	//--------------------------- APPEON BEGIN ---------------------------
	//$<Modify> 08.24.2007 By: Evan
	//$<Reason> The facility_id argument is not requirement.
	/*
	SELECTBLOB substring(image_data,:ll_start,8000)
	INTO :lb_data
	FROM pd_images
	WHERE rec_id = :al_rec_id AND
			prac_id = :al_prac_id AND
			facility_id = :ai_facility_id AND
			seq_no = :ai_seq_no AND
			screen_id = :ai_screen_id
	USING SQLCA;
	*/
	SELECTBLOB substring(image_data,:ll_start,8000)
	INTO :lb_data
	FROM pd_images
	WHERE rec_id = :al_rec_id AND
			prac_id = :al_prac_id AND
			seq_no = :ai_seq_no AND
			screen_id = :ai_screen_id
	USING SQLCA;
	//---------------------------- APPEON END ----------------------------
	
	lb_all_data += lb_data
NEXT 

lb_image_data = lb_all_data

Return 1

end function

